// Generated by CoffeeScript 2.7.0
// static/coffee/auth.coffee
// Shared authentication utilities for frontend

// Check if user is authenticated, redirect to login if not
window.requireAuth = async function() {
  var data, err, response;
  try {
    response = (await fetch('/auth/status'));
    data = (await response.json());
    if (!data.authenticated) {
      window.location.href = '/login.html';
      return false;
    }
    return true;
  } catch (error) {
    err = error;
    console.error('Auth check failed:', err);
    window.location.href = '/login.html';
    return false;
  }
};

// Get current user info
window.getCurrentUser = async function() {
  var data, err, response;
  try {
    response = (await fetch('/auth/status'));
    data = (await response.json());
    if (data.authenticated) {
      return {
        email: data.email
      };
    } else {
      return null;
    }
  } catch (error) {
    err = error;
    console.error('Get user failed:', err);
    return null;
  }
};

// Logout current user
window.logout = async function() {
  var err, response;
  try {
    response = (await fetch('/auth/logout', {
      method: 'POST'
    }));
    if (response.ok) {
      window.location.href = '/login.html';
      return true;
    } else {
      console.error('Logout failed');
      return false;
    }
  } catch (error) {
    err = error;
    console.error('Logout error:', err);
    return false;
  }
};

// Add logout button to page
window.addLogoutButton = function(containerSelector = 'header') {
  var container, logoutBtn;
  container = document.querySelector(containerSelector);
  if (!container) {
    return;
  }
  // Check if logout button already exists
  if (document.getElementById('logoutBtn')) {
    return;
  }
  logoutBtn = document.createElement('button');
  logoutBtn.id = 'logoutBtn';
  logoutBtn.className = 'btn btn-secondary';
  logoutBtn.textContent = 'Logout';
  logoutBtn.style.float = 'right';
  logoutBtn.addEventListener('click', function(e) {
    e.preventDefault();
    if (confirm('Are you sure you want to logout?')) {
      return logout();
    }
  });
  return container.appendChild(logoutBtn);
};

// Auto-initialize auth check on page load
document.addEventListener('DOMContentLoaded', async function() {
  // Only run on pages that are not login page
  if (window.location.pathname !== '/login.html') {
    await requireAuth();
    return addLogoutButton();
  }
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8iLCJzb3VyY2VzIjpbInN0YXRpYy9jb2ZmZWUvYXV0aC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUcwRDs7OztBQUMxRCxNQUFNLENBQUMsV0FBUCxHQUFxQixNQUFBLFFBQUEsQ0FBQSxDQUFBO0FBQ3JCLE1BQUEsSUFBQSxFQUFBLEdBQUEsRUFBQTtBQUFFO0lBQ0UsUUFBQSxHQUFXLENBQUEsTUFBTSxLQUFBLENBQU0sY0FBTixDQUFOO0lBQ1gsSUFBQSxHQUFPLENBQUEsTUFBTSxRQUFRLENBQUMsSUFBVCxDQUFBLENBQU47SUFFUCxJQUFHLENBQUksSUFBSSxDQUFDLGFBQVo7TUFDRSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQWhCLEdBQXVCO0FBQ3ZCLGFBQU8sTUFGVDs7QUFJQSxXQUFPLEtBUlQ7R0FTQSxhQUFBO0lBQU07SUFDSixPQUFPLENBQUMsS0FBUixDQUFjLG9CQUFkLEVBQW9DLEdBQXBDO0lBQ0EsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFoQixHQUF1QjtBQUN2QixXQUFPLE1BSFQ7O0FBVm1CLEVBRHFDOzs7QUFrQjFELE1BQU0sQ0FBQyxjQUFQLEdBQXdCLE1BQUEsUUFBQSxDQUFBLENBQUE7QUFDeEIsTUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBO0FBQUU7SUFDRSxRQUFBLEdBQVcsQ0FBQSxNQUFNLEtBQUEsQ0FBTSxjQUFOLENBQU47SUFDWCxJQUFBLEdBQU8sQ0FBQSxNQUFNLFFBQVEsQ0FBQyxJQUFULENBQUEsQ0FBTjtJQUVQLElBQUcsSUFBSSxDQUFDLGFBQVI7QUFDRSxhQUFPO1FBQUEsS0FBQSxFQUFPLElBQUksQ0FBQztNQUFaLEVBRFQ7S0FBQSxNQUFBO0FBR0UsYUFBTyxLQUhUO0tBSkY7R0FRQSxhQUFBO0lBQU07SUFDSixPQUFPLENBQUMsS0FBUixDQUFjLGtCQUFkLEVBQWtDLEdBQWxDO0FBQ0EsV0FBTyxLQUZUOztBQVRzQixFQWxCa0M7OztBQWlDMUQsTUFBTSxDQUFDLE1BQVAsR0FBZ0IsTUFBQSxRQUFBLENBQUEsQ0FBQTtBQUNoQixNQUFBLEdBQUEsRUFBQTtBQUFFO0lBQ0UsUUFBQSxHQUFXLENBQUEsTUFBTSxLQUFBLENBQU0sY0FBTixFQUNmO01BQUEsTUFBQSxFQUFRO0lBQVIsQ0FEZSxDQUFOO0lBR1gsSUFBRyxRQUFRLENBQUMsRUFBWjtNQUNFLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBaEIsR0FBdUI7QUFDdkIsYUFBTyxLQUZUO0tBQUEsTUFBQTtNQUlFLE9BQU8sQ0FBQyxLQUFSLENBQWMsZUFBZDtBQUNBLGFBQU8sTUFMVDtLQUpGO0dBVUEsYUFBQTtJQUFNO0lBQ0osT0FBTyxDQUFDLEtBQVIsQ0FBYyxlQUFkLEVBQStCLEdBQS9CO0FBQ0EsV0FBTyxNQUZUOztBQVhjLEVBakMwQzs7O0FBa0QxRCxNQUFNLENBQUMsZUFBUCxHQUF5QixRQUFBLENBQUMsb0JBQW9CLFFBQXJCLENBQUE7QUFDekIsTUFBQSxTQUFBLEVBQUE7RUFBRSxTQUFBLEdBQVksUUFBUSxDQUFDLGFBQVQsQ0FBdUIsaUJBQXZCO0VBQ1osSUFBRyxDQUFJLFNBQVA7QUFDRSxXQURGO0dBREY7O0VBS0UsSUFBRyxRQUFRLENBQUMsY0FBVCxDQUF3QixXQUF4QixDQUFIO0FBQ0UsV0FERjs7RUFHQSxTQUFBLEdBQVksUUFBUSxDQUFDLGFBQVQsQ0FBdUIsUUFBdkI7RUFDWixTQUFTLENBQUMsRUFBVixHQUFlO0VBQ2YsU0FBUyxDQUFDLFNBQVYsR0FBc0I7RUFDdEIsU0FBUyxDQUFDLFdBQVYsR0FBd0I7RUFDeEIsU0FBUyxDQUFDLEtBQUssQ0FBQyxLQUFoQixHQUF3QjtFQUN4QixTQUFTLENBQUMsZ0JBQVYsQ0FBMkIsT0FBM0IsRUFBb0MsUUFBQSxDQUFDLENBQUQsQ0FBQTtJQUNsQyxDQUFDLENBQUMsY0FBRixDQUFBO0lBQ0EsSUFBRyxPQUFBLENBQVEsa0NBQVIsQ0FBSDthQUNFLE1BQUEsQ0FBQSxFQURGOztFQUZrQyxDQUFwQztTQUtBLFNBQVMsQ0FBQyxXQUFWLENBQXNCLFNBQXRCO0FBbkJ1QixFQWxEaUM7OztBQXlFMUQsUUFBUSxDQUFDLGdCQUFULENBQTBCLGtCQUExQixFQUE4QyxNQUFBLFFBQUEsQ0FBQSxDQUFBLEVBQUE7O0VBRTVDLElBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFoQixLQUE4QixhQUFqQztJQUNFLE1BQU0sV0FBQSxDQUFBO1dBQ04sZUFBQSxDQUFBLEVBRkY7O0FBRjRDLENBQTlDIiwic291cmNlc0NvbnRlbnQiOlsiIyBzdGF0aWMvY29mZmVlL2F1dGguY29mZmVlXG4jIFNoYXJlZCBhdXRoZW50aWNhdGlvbiB1dGlsaXRpZXMgZm9yIGZyb250ZW5kXG5cbiMgQ2hlY2sgaWYgdXNlciBpcyBhdXRoZW50aWNhdGVkLCByZWRpcmVjdCB0byBsb2dpbiBpZiBub3RcbndpbmRvdy5yZXF1aXJlQXV0aCA9IC0+XG4gIHRyeVxuICAgIHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hdXRoL3N0YXR1cycpXG4gICAgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuXG4gICAgaWYgbm90IGRhdGEuYXV0aGVudGljYXRlZFxuICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnL2xvZ2luLmh0bWwnXG4gICAgICByZXR1cm4gZmFsc2VcblxuICAgIHJldHVybiB0cnVlXG4gIGNhdGNoIGVyclxuICAgIGNvbnNvbGUuZXJyb3IgJ0F1dGggY2hlY2sgZmFpbGVkOicsIGVyclxuICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9sb2dpbi5odG1sJ1xuICAgIHJldHVybiBmYWxzZVxuXG5cbiMgR2V0IGN1cnJlbnQgdXNlciBpbmZvXG53aW5kb3cuZ2V0Q3VycmVudFVzZXIgPSAtPlxuICB0cnlcbiAgICByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXV0aC9zdGF0dXMnKVxuICAgIGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcblxuICAgIGlmIGRhdGEuYXV0aGVudGljYXRlZFxuICAgICAgcmV0dXJuIGVtYWlsOiBkYXRhLmVtYWlsXG4gICAgZWxzZVxuICAgICAgcmV0dXJuIG51bGxcbiAgY2F0Y2ggZXJyXG4gICAgY29uc29sZS5lcnJvciAnR2V0IHVzZXIgZmFpbGVkOicsIGVyclxuICAgIHJldHVybiBudWxsXG5cblxuIyBMb2dvdXQgY3VycmVudCB1c2VyXG53aW5kb3cubG9nb3V0ID0gLT5cbiAgdHJ5XG4gICAgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCAnL2F1dGgvbG9nb3V0JyxcbiAgICAgIG1ldGhvZDogJ1BPU1QnXG5cbiAgICBpZiByZXNwb25zZS5va1xuICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnL2xvZ2luLmh0bWwnXG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIGVsc2VcbiAgICAgIGNvbnNvbGUuZXJyb3IgJ0xvZ291dCBmYWlsZWQnXG4gICAgICByZXR1cm4gZmFsc2VcbiAgY2F0Y2ggZXJyXG4gICAgY29uc29sZS5lcnJvciAnTG9nb3V0IGVycm9yOicsIGVyclxuICAgIHJldHVybiBmYWxzZVxuXG5cbiMgQWRkIGxvZ291dCBidXR0b24gdG8gcGFnZVxud2luZG93LmFkZExvZ291dEJ1dHRvbiA9IChjb250YWluZXJTZWxlY3RvciA9ICdoZWFkZXInKSAtPlxuICBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKVxuICBpZiBub3QgY29udGFpbmVyXG4gICAgcmV0dXJuXG5cbiAgIyBDaGVjayBpZiBsb2dvdXQgYnV0dG9uIGFscmVhZHkgZXhpc3RzXG4gIGlmIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2dvdXRCdG4nKVxuICAgIHJldHVyblxuXG4gIGxvZ291dEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpXG4gIGxvZ291dEJ0bi5pZCA9ICdsb2dvdXRCdG4nXG4gIGxvZ291dEJ0bi5jbGFzc05hbWUgPSAnYnRuIGJ0bi1zZWNvbmRhcnknXG4gIGxvZ291dEJ0bi50ZXh0Q29udGVudCA9ICdMb2dvdXQnXG4gIGxvZ291dEJ0bi5zdHlsZS5mbG9hdCA9ICdyaWdodCdcbiAgbG9nb3V0QnRuLmFkZEV2ZW50TGlzdGVuZXIgJ2NsaWNrJywgKGUpIC0+XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgaWYgY29uZmlybSgnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGxvZ291dD8nKVxuICAgICAgbG9nb3V0KClcblxuICBjb250YWluZXIuYXBwZW5kQ2hpbGQobG9nb3V0QnRuKVxuXG5cbiMgQXV0by1pbml0aWFsaXplIGF1dGggY2hlY2sgb24gcGFnZSBsb2FkXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyICdET01Db250ZW50TG9hZGVkJywgLT5cbiAgIyBPbmx5IHJ1biBvbiBwYWdlcyB0aGF0IGFyZSBub3QgbG9naW4gcGFnZVxuICBpZiB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgaXNudCAnL2xvZ2luLmh0bWwnXG4gICAgYXdhaXQgcmVxdWlyZUF1dGgoKVxuICAgIGFkZExvZ291dEJ1dHRvbigpXG4iXX0=
//# sourceURL=/mnt/nvme0n1p4/git/github/rdeforest/RentCoordinator/static/coffee/auth.coffee